// <auto-generated />
using System;
using Inventario.ProductService.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ProductService.API.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20250509025545_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventario.Shared.Entities.NdProducto", b =>
                {
                    b.Property<int>("NdProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NdProductoId"));

                    b.Property<DateTime>("NdProductoActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NdProductoCategoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NdProductoCreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NdProductoDescripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NdProductoImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NdProductoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NdProductoPrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NdProductoStock")
                        .HasColumnType("int");

                    b.HasKey("NdProductoId");

                    b.ToTable("ndproductos", (string)null);
                });

            modelBuilder.Entity("Inventario.Shared.Entities.NdTransaccion", b =>
                {
                    b.Property<int>("NdTransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NdTransaccionId"));

                    b.Property<int>("NdProductoId")
                        .HasColumnType("int");

                    b.Property<int>("NdTransaccionCantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("NdTransaccionCreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NdTransaccionDetalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NdTransaccionFecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NdTransaccionPrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NdTransaccionProductoId")
                        .HasColumnType("int");

                    b.Property<string>("NdTransaccionTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NdTransaccionTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("NdTransaccionId");

                    b.HasIndex("NdProductoId");

                    b.ToTable("NdTransaccion");
                });

            modelBuilder.Entity("Inventario.Shared.Entities.NdTransaccion", b =>
                {
                    b.HasOne("Inventario.Shared.Entities.NdProducto", "NdProducto")
                        .WithMany("NdTransacciones")
                        .HasForeignKey("NdProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NdProducto");
                });

            modelBuilder.Entity("Inventario.Shared.Entities.NdProducto", b =>
                {
                    b.Navigation("NdTransacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
